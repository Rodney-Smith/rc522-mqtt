# These are some examples of commonly ignored file patterns.
# You should customize this list as applicable to your project.
# Learn more about .gitignore:
#     https://www.atlassian.com/git/tutorials/saving-changes/gitignore

# Angular Files
angular.js.tmproj
angular.xcodeproj

# C extensions
*.so

# Celery stuff
celerybeat-schedule
celerybeat.pid

# Django stuff:
local_settings.py
db.sqlite3
db.sqlite3-journal

# eslint
.eslintcache

# Flask stuff:
instance/
.webassets-cache

# git
*.patch

# Compiled Java class files
*.class

# Package Java Files #
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*

# JetBrains IDE
.idea/

# Maven
dist/
target/
pom.xml.tag
pom.xml.releaseBackup
pom.xml.versionsBackup
pom.xml.next
release.properties
dependency-reduced-pom.xml
buildNumber.properties
.mvn/timing.properties
# https://github.com/takari/maven-wrapper#usage-without-binary-jar
.mvn/wrapper/maven-wrapper.jar

# Node artifact files
node_modules/
dist/

# npm
npm-debug.log

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Compiled Python bytecode
*.py[cod]
__pycache__/
*$py.class

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
.idea/.gitignore
*.iml
.idea/inspectionProfiles/
.idea/misc.xml
.idea/modules.xml
.idea/vcs.xml

# Rope project settings
.ropeproject

# SageMath parsed files
*.sage.py

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# Spyder project settings
.spyderproject
.spyproject

# mkdocs documentation
site/

# Translations
*.mo
*.pot

# Unit test / coverage reports
TEST*.xml
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# VIM
*.un~
Session.vim
.netrwhist
*.swp
.lvimrc

# VS Code
.vscode/

# Web Stuff
web.config

# Applications
*.app
*.exe
*.war

# Database files
home-assistant_v2.*

# Directories
build/
deploy/
tmp/
.AppleDB/
.AppleDesktop/
Network Trash Folder/
Temporary Items/
.apdisk/
examples_directory/

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Files that might appear on external disks
.Spotlight-V100
.Trashes
.DocumentRevisions-V100
.fseventsd
.TemporaryItems
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Folder configuration files
*~
.DS_Store
.AppleDouble
.LSOverride
[Dd]esktop.ini

# Large media files
*.mp4
*.tiff
*.avi
*.flv
*.mov
*.wmv

# localhistory
.history

# Log Files
*.log
*.stackdump
pip-log.txt
pip-delete-this-directory.txt

# Private Information
.private
.gitconfig
secrets.*
config.json

# Over-arching stuff
*.bak
*.ignored/
*.ignored.*
*~.nib
*.stackdump
*.swp
*.swo
*.tmp
readme*.json

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Thumbnail cache files
._*
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db

# Windows files
*.cab
*.lnk
*.msi
*.msix
*.msm
*.msp
